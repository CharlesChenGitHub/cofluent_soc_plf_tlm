//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_mem_sn_si
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of chi_icn_PlfPlf generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_mem_sn_si.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'SI definitions' algorithm generated code

//End of 'SI definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_mem_sn_si::cfm_mem_sn_si(sc_core::sc_module_name name) :
		cf_slave_interface(name) {
	cf_slave_interface::init();

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI constructor' algorithm generated code

	//End of 'SI constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_slave_interface::elab_end();
}
//@}

/// \name destructor
//@{
cfm_mem_sn_si::~cfm_mem_sn_si(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI destructor' algorithm generated code

	//End of 'SI destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_mem_sn_si::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI pre elaboration' algorithm generated code

	//End of 'SI pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_mem_sn_si::cb_init_attributes() {

	cfa_buffer_policy.init(CF_IFC_BUFFER_POLICY_FIFO);
	cfa_buffer_capacity.init((cf_count) 1);
	cfa_available_memory.init(cf_data_size(1, CF_MBYTE));
	cfa_buffer_read_time.init(cf_expr_duration(1, CF_NS));
	cfa_buffer_write_time.init(cf_expr_duration(1, CF_NS));
	cfa_dynamic_power.init(cf_power(0, CF_UW));
	cfa_cost.init(cf_cost(0, CF_USD));
	cfa_dynamic_load.init(cf_resource_load(100, CF_PERCENT));

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_mem_sn_si::cb_init_local_vars(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI initializations' algorithm generated code

	//End of 'SI initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name Overload function for interface before write component
//@{
void cfm_mem_sn_si::itc_cb_before_write_component(
		const cf_core::cf_payload_b & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI Before Write Component' algorithm generated code

	//End of 'SI Before Write Component' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface before write interconnect
//@{
void cfm_mem_sn_si::itc_cb_before_write_interconnect(
		const tlm::tlm_generic_payload & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI Before Write Interconnect' algorithm generated code

	//End of 'SI Before Write Interconnect' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface after write component
//@{
void cfm_mem_sn_si::itc_cb_after_write_component(
		const cf_core::cf_payload_b & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI After Write Component' algorithm generated code

	//End of 'SI After Write Component' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface after write interconnect
//@{
void cfm_mem_sn_si::itc_cb_after_write_interconnect(
		const tlm::tlm_generic_payload & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI After Write Interconnect' algorithm generated code

	//End of 'SI After Write Interconnect' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface before read component
//@{
void cfm_mem_sn_si::itc_cb_before_read_component(
		const cf_core::cf_payload_b & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI Before Read Component' algorithm generated code

	//End of 'SI Before Read Component' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface before read interconnect
//@{
void cfm_mem_sn_si::itc_cb_before_read_interconnect(
		const tlm::tlm_generic_payload & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI Before Read Interconnect' algorithm generated code

	//End of 'SI Before Read Interconnect' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface after read component
//@{
void cfm_mem_sn_si::itc_cb_after_read_component(
		const cf_core::cf_payload_b & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI After Read Component' algorithm generated code

	//End of 'SI After Read Component' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
/// \name Overload function for interface after read interconnect
//@{
void cfm_mem_sn_si::itc_cb_after_read_interconnect(
		const tlm::tlm_generic_payload & _trans) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'SI After Read Interconnect' algorithm generated code

	//End of 'SI After Read Interconnect' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>