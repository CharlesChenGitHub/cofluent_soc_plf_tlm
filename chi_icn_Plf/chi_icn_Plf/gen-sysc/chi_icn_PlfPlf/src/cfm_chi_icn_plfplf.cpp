//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_chi_icn_plfplf
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of chi_icn_PlfPlf generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_chi_icn_plfplf.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'chi_icn_PlfPlf definitions' algorithm generated code
//connect RN-icn
//RN.rnf.port <-bind-> icn.port_RN_F[0]->socket
void customized_soc_bind(cfm_chi_icn& TLMBus, cfm_tg_rnf* TLMInitiator, int i) {
	//(TLMInitiator->socket).bind(*(TLMBus.t_sk[0]));
	(TLMInitiator->rnf)->port.txreq_init_socket.bind(
			(TLMBus.port_RN_F[i])->rxreq_tgt_socket);
	(TLMInitiator->rnf)->port.txrsp_init_socket.bind(
			(TLMBus.port_RN_F[i])->rxrsp_tgt_socket);
	(TLMInitiator->rnf)->port.txdat_init_socket.bind(
			(TLMBus.port_RN_F[i])->rxdat_tgt_socket);

	(TLMBus.port_RN_F[i])->txrsp_init_socket.bind(
			(TLMInitiator->rnf)->port.rxrsp_tgt_socket);
	(TLMBus.port_RN_F[i])->txdat_init_socket.bind(
			(TLMInitiator->rnf)->port.rxdat_tgt_socket);
	(TLMBus.port_RN_F[i])->txsnp_init_socket.bind(
			(TLMInitiator->rnf)->port.rxsnp_tgt_socket);
}

//connect SN(memory)-icn
//SN.socket <-bind-> icn.port_SN[0]->socket
//mem_sn(cfm_mem_SN <-SlaveNode_F)  SlaveNode_F.sockets
void customized_soc_bind(cfm_chi_icn& TLMBus, cfm_mem_sn* TLMMemory) {
	//TLMBus.memmap(0x40000000ULL, 0x100 - 1,ADDRMODE_RELATIVE, -1, TLMMemory->init_socket);
	TLMMemory->txrsp_init_socket.bind((TLMBus.port_SN)->rxrsp_tgt_socket);
	TLMMemory->txdat_init_socket.bind((TLMBus.port_SN)->rxdat_tgt_socket);

	(TLMBus.port_SN)->txreq_init_socket.bind(TLMMemory->rxreq_tgt_socket);
	(TLMBus.port_SN)->txdat_init_socket.bind(TLMMemory->rxdat_tgt_socket);

	TLMMemory->init_socket(TLMMemory->mem.socket);
}
//End of 'chi_icn_PlfPlf definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_chi_icn_plfplf::cfm_chi_icn_plfplf(sc_core::sc_module_name name) :
		cf_platform(name), bus_CHI_ICN("CHI_ICN") {
	cf_platform::init();

	mem_sn = new cfm_mem_sn("mem_sn");
	// processor after active callback
	CF_PROC_CB_AFTER_ACTIVE((*mem_sn),
			cfm_mem_sn::itc_proc_mem_sn_cb_after_active);

	// processor after inactive callback
	CF_PROC_CB_AFTER_INACTIVE((*mem_sn),
			cfm_mem_sn::itc_proc_mem_sn_cb_after_inactive);

	// instantiation of tg_rnf_vec
	for (cf_count i = 0; i < (cf_count) 2; i++) {
		cfm_tg_rnf* module = new cfm_tg_rnf(cf_string("tg_rnf[%d]", i).c_str());
		CF_ASSERT (module)
		tg_rnf_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count) 2; i++) {
		// processor after active callback
		CF_PROC_CB_AFTER_ACTIVE((*tg_rnf_vec[i]),
				cfm_tg_rnf::itc_proc_tg_rnf_cb_after_active);

		// processor after inactive callback
		CF_PROC_CB_AFTER_INACTIVE((*tg_rnf_vec[i]),
				cfm_tg_rnf::itc_proc_tg_rnf_cb_after_inactive);
	}
	// connections
	//CHI_ICN is not streaming connection 

	customized_soc_bind(bus_CHI_ICN, mem_sn);	//SoC TLM2 mono instance
	for (cf_count i = 0; i < (cf_count) 2; i++) {
		cfm_tg_rnf* module = tg_rnf_vec[i];
		if (module != nullptr) {
			//CHI_ICN is not streaming connection 

			customized_soc_bind(bus_CHI_ICN, tg_rnf_vec[i], i);	//SoC TLM2 multiple instance
		}
	}

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'chi_icn_PlfPlf constructor' algorithm generated code

	//End of 'chi_icn_PlfPlf constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_platform::elab_end();
}
//@}

/// \name destructor
//@{
cfm_chi_icn_plfplf::~cfm_chi_icn_plfplf(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'chi_icn_PlfPlf destructor' algorithm generated code

	//End of 'chi_icn_PlfPlf destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	for (vector<cfm_tg_rnf*>::const_iterator vi = tg_rnf_vec.begin();
			vi != tg_rnf_vec.end(); vi++) {
		delete (*vi);
	}
	delete mem_sn;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_chi_icn_plfplf::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'chi_icn_PlfPlf pre elaboration' algorithm generated code

	//End of 'chi_icn_PlfPlf pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_chi_icn_plfplf::cb_init_attributes() {

// initialize subsystem attributes
	cfa_cycle_period.init(cf_expr_time(10, CF_NS));
	cfa_voltage.init(cf_voltage(3, CF_V));

// initialize relations attributes

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_chi_icn_plfplf::cb_init_local_vars(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'chi_icn_PlfPlf initializations' algorithm generated code

	//End of 'chi_icn_PlfPlf initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>